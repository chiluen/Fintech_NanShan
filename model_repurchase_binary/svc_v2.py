# -*- coding: utf-8 -*-
"""SVC_V2.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1tO-K6vhl7tC8mJYyDOpNn3upTeFSJg-q
"""

import pandas as pd
from pydrive.auth import GoogleAuth
from pydrive.drive import GoogleDrive 
from google.colab import auth 
from oauth2client.client import GoogleCredentials
  
auth.authenticate_user()
gauth = GoogleAuth()
gauth.credentials = GoogleCredentials.get_application_default()
drive = GoogleDrive(gauth)

file_id = '1r3SxYeUi-Cp6jlKqYks0MiZdAVbSsbTZ'  #雲端硬碟檔案連結碼d/
downloaded = drive.CreateFile({'id': file_id})
downloaded.GetContentFile('personal_and_behavioral.xlsx')

df_all = pd.read_excel('personal_and_behavioral.xlsx')

from sklearn.utils import resample
from sklearn import svm, metrics
import numpy as np

col_0=~df_all['REPURCHASE'].isin(['1'])
df_0=df_all[col_0] # Y=0

col_1=df_all['REPURCHASE'].isin(['1'])
df_1=df_all[col_1] # Y=1

acc_l=[]
acc_r=[]
ratio_l=[]
ratio_r=[]
for n in range(3):
    boot0 = resample(df_0, replace=True, n_samples=2*len(df_1), random_state=n)
    boot1 = resample(df_1, replace=True, n_samples=len(df_1), random_state=n)
    boot=pd.concat([boot0,boot1]) #training set
    
    boot_X=boot.drop(['REPURCHASE'], axis = 1)
    boot_Y=boot['REPURCHASE']
    
    X=df_all.drop(['REPURCHASE'], axis = 1) #所有data都測試
    Y=df_all['REPURCHASE']
    
    ker=['linear','rbf']
    for k in ker:
        svc_ker = svm.SVC(kernel=k, C=1 )
        svc_ker.fit(boot_X, boot_Y)

        test_Y_predicted = svc_ker.predict(X) ### TEST
        accuracy = metrics.accuracy_score(Y, test_Y_predicted)
        if k=='linear':acc_l.append(accuracy)
        else:acc_r.append(accuracy)
    
        num_11=0
        num_10=0
        num_01=0
        num_00=0
        for i in range(len(test_Y_predicted)):
            if test_Y_predicted[i]==1:
              if Y.iloc[i]==1:num_11+=1
              else :num_10+=1
            else:
                if Y.iloc[i]==1:num_01+=1
                else :num_00+=1
        if k=='linear':
          print('linear.random=',n)
          print('num_11,預測到y=1且真的為1 : ',num_11)
          print('真實 y=1 : ',sum(Y))
          print('num_10',num_10)
          print('num_01',num_01)
          print('num_00',num_00)
          ratio_l.append(num_11/sum(Y))
        else:
          print('rbf.random=',n)
          print('num_11,預測到y=1且真的為1 : ',num_11)
          print('真實 y=1 : ',sum(Y))
          print('num_10',num_10)
          print('num_01',num_01)
          print('num_00',num_00)
          ratio_r.append(num_11/sum(Y))

        print()

            
print('SVC linear')          
print('accuracy=',acc_l)
print('accuracy mean=',np.mean(acc_l))
print('ratio=',ratio_l)
print('ratio mean=',np.mean(ratio_l))

print('SVC rbf')          
print('accuracy=',acc_r)
print('accuracy mean=',np.mean(acc_r))
print('ratio=',ratio_r)
print('ratio mean=',np.mean(ratio_r))

import pandas as pd
from pydrive.auth import GoogleAuth
from pydrive.drive import GoogleDrive 
from google.colab import auth 
from oauth2client.client import GoogleCredentials
  
auth.authenticate_user()
gauth = GoogleAuth()
gauth.credentials = GoogleCredentials.get_application_default()
drive = GoogleDrive(gauth)

file_id = '1glsyFSfzrnkEPlvPGDjLCNwrwsOpTmhu'  #雲端硬碟檔案連結碼d/
downloaded = drive.CreateFile({'id': file_id})
downloaded.GetContentFile('behavioral.xlsx')

df_all = pd.read_excel('behavioral.xlsx')


from sklearn.utils import resample
from sklearn import svm, metrics
import numpy as np
print('behavioral.xlsx')

col_0=~df_all['REPURCHASE'].isin(['1'])
df_0=df_all[col_0] # Y=0

col_1=df_all['REPURCHASE'].isin(['1'])
df_1=df_all[col_1] # Y=1

acc_l=[]
acc_r=[]
ratio_l=[]
ratio_r=[]
for n in range(3):
    boot0 = resample(df_0, replace=True, n_samples=2*len(df_1), random_state=n)
    boot1 = resample(df_1, replace=True, n_samples=len(df_1), random_state=n)
    boot=pd.concat([boot0,boot1]) #training set
    
    boot_X=boot.drop(['REPURCHASE'], axis = 1)
    boot_Y=boot['REPURCHASE']
    
    X=df_all.drop(['REPURCHASE'], axis = 1) #所有data都測試
    Y=df_all['REPURCHASE']
    
    ker=['linear','rbf']
    for k in ker:
        svc_ker = svm.SVC(kernel=k, C=1 )
        svc_ker.fit(boot_X, boot_Y)

        test_Y_predicted = svc_ker.predict(X) ### TEST
        accuracy = metrics.accuracy_score(Y, test_Y_predicted)
        if k=='linear':acc_l.append(accuracy)
        else:acc_r.append(accuracy)
    
        num_11=0
        num_10=0
        num_01=0
        num_00=0
        for i in range(len(test_Y_predicted)):
            if test_Y_predicted[i]==1:
              if Y.iloc[i]==1:num_11+=1
              else :num_10+=1
            else:
                if Y.iloc[i]==1:num_01+=1
                else :num_00+=1
        if k=='linear':
          print('linear.random=',n)
          print('num_11,預測到y=1且真的為1 : ',num_11)
          print('真實 y=1 : ',sum(Y))
          print('num_10',num_10)
          print('num_01',num_01)
          print('num_00',num_00)
          ratio_l.append(num_11/sum(Y))
        else:
          print('rbf.random=',n)
          print('num_11,預測到y=1且真的為1 : ',num_11)
          print('真實 y=1 : ',sum(Y))
          print('num_10',num_10)
          print('num_01',num_01)
          print('num_00',num_00)
          ratio_r.append(num_11/sum(Y))

        print()

            
print('SVC linear')          
print('accuracy=',acc_l)
print('accuracy mean=',np.mean(acc_l))
print('ratio=',ratio_l)
print('ratio mean=',np.mean(ratio_l))
print()

print('SVC rbf')          
print('accuracy=',acc_r)
print('accuracy mean=',np.mean(acc_r))
print('ratio=',ratio_r)
print('ratio mean=',np.mean(ratio_r))

import pandas as pd
from pydrive.auth import GoogleAuth
from pydrive.drive import GoogleDrive 
from google.colab import auth 
from oauth2client.client import GoogleCredentials
  
auth.authenticate_user()
gauth = GoogleAuth()
gauth.credentials = GoogleCredentials.get_application_default()
drive = GoogleDrive(gauth)

file_id = '1E_KZJFOvnj6ikjhqzrxjEARAy9RPCmya'  #雲端硬碟檔案連結碼d/
downloaded = drive.CreateFile({'id': file_id})
downloaded.GetContentFile('personal.xlsx')

df_all = pd.read_excel('personal.xlsx')


from sklearn.utils import resample
from sklearn import svm, metrics
import numpy as np
print('personal.xlsx')

col_0=~df_all['REPURCHASE'].isin(['1'])
df_0=df_all[col_0] # Y=0

col_1=df_all['REPURCHASE'].isin(['1'])
df_1=df_all[col_1] # Y=1

acc_l=[]
acc_r=[]
ratio_l=[]
ratio_r=[]
for n in range(3):
    boot0 = resample(df_0, replace=True, n_samples=2*len(df_1), random_state=n)
    boot1 = resample(df_1, replace=True, n_samples=len(df_1), random_state=n)
    boot=pd.concat([boot0,boot1]) #training set
    
    boot_X=boot.drop(['REPURCHASE'], axis = 1)
    boot_Y=boot['REPURCHASE']
    
    X=df_all.drop(['REPURCHASE'], axis = 1) #所有data都測試
    Y=df_all['REPURCHASE']
    
    ker=['linear','rbf']
    for k in ker:
        svc_ker = svm.SVC(kernel=k, C=1 )
        svc_ker.fit(boot_X, boot_Y)

        test_Y_predicted = svc_ker.predict(X) ### TEST
        accuracy = metrics.accuracy_score(Y, test_Y_predicted)
        if k=='linear':acc_l.append(accuracy)
        else:acc_r.append(accuracy)
    
        num_11=0
        num_10=0
        num_01=0
        num_00=0
        for i in range(len(test_Y_predicted)):
            if test_Y_predicted[i]==1:
              if Y.iloc[i]==1:num_11+=1
              else :num_10+=1
            else:
                if Y.iloc[i]==1:num_01+=1
                else :num_00+=1
        if k=='linear':
          print('linear.random=',n)
          print('num_11,預測到y=1且真的為1 : ',num_11)
          print('真實 y=1 : ',sum(Y))
          print('num_10',num_10)
          print('num_01',num_01)
          print('num_00',num_00)
          ratio_l.append(num_11/sum(Y))
        else:
          print('rbf.random=',n)
          print('num_11,預測到y=1且真的為1 : ',num_11)
          print('真實 y=1 : ',sum(Y))
          print('num_10',num_10)
          print('num_01',num_01)
          print('num_00',num_00)
          ratio_r.append(num_11/sum(Y))

        print()
            
print('SVC linear')          
print('accuracy=',acc_l)
print('accuracy mean=',np.mean(acc_l))
print('ratio=',ratio_l)
print('ratio mean=',np.mean(ratio_l))
print()

print('SVC rbf')          
print('accuracy=',acc_r)
print('accuracy mean=',np.mean(acc_r))
print('ratio=',ratio_r)
print('ratio mean=',np.mean(ratio_r))

import pandas as pd
from pydrive.auth import GoogleAuth
from pydrive.drive import GoogleDrive 
from google.colab import auth 
from oauth2client.client import GoogleCredentials
  
auth.authenticate_user()
gauth = GoogleAuth()
gauth.credentials = GoogleCredentials.get_application_default()
drive = GoogleDrive(gauth)

file_id = '1r3SxYeUi-Cp6jlKqYks0MiZdAVbSsbTZ'  #雲端硬碟檔案連結碼d/
downloaded = drive.CreateFile({'id': file_id})
downloaded.GetContentFile('personal_and_behavioral.xlsx')

df_all = pd.read_excel('personal_and_behavioral.xlsx')

from sklearn.utils import resample
from sklearn import svm, metrics
import numpy as np
print('【personal_and_behavioral.xlsx，C=10】')

col_0=~df_all['REPURCHASE'].isin(['1'])
df_0=df_all[col_0] # Y=0

col_1=df_all['REPURCHASE'].isin(['1'])
df_1=df_all[col_1] # Y=1

acc_l=[]
acc_r=[]
ratio_l=[]
ratio_r=[]
for n in range(3):
    boot0 = resample(df_0, replace=True, n_samples=2*len(df_1), random_state=n)
    boot1 = resample(df_1, replace=True, n_samples=len(df_1), random_state=n)
    boot=pd.concat([boot0,boot1]) #training set
    
    boot_X=boot.drop(['REPURCHASE'], axis = 1)
    boot_Y=boot['REPURCHASE']
    
    X=df_all.drop(['REPURCHASE'], axis = 1) #所有data都測試
    Y=df_all['REPURCHASE']
    
    ker=['linear','rbf']
    for k in ker:
        svc_ker = svm.SVC(kernel=k, C=10 )
        svc_ker.fit(boot_X, boot_Y)

        test_Y_predicted = svc_ker.predict(X) ### TEST
        accuracy = metrics.accuracy_score(Y, test_Y_predicted)
        if k=='linear':acc_l.append(accuracy)
        else:acc_r.append(accuracy)
    
        num_11=0
        num_10=0
        num_01=0
        num_00=0
        for i in range(len(test_Y_predicted)):
            if test_Y_predicted[i]==1:
              if Y.iloc[i]==1:num_11+=1
              else :num_10+=1
            else:
                if Y.iloc[i]==1:num_01+=1
                else :num_00+=1
        if k=='linear':
          print('linear.random=',n)
          print('num_11,預測到y=1且真的為1 : ',num_11)
          print('真實 y=1 : ',sum(Y))
          print('num_10',num_10)
          print('num_01',num_01)
          print('num_00',num_00)
          ratio_l.append(num_11/sum(Y))
        else:
          print('rbf.random=',n)
          print('num_11,預測到y=1且真的為1 : ',num_11)
          print('真實 y=1 : ',sum(Y))
          print('num_10',num_10)
          print('num_01',num_01)
          print('num_00',num_00)
          ratio_r.append(num_11/sum(Y))

        print()

            
print('SVC linear')          
print('accuracy=',acc_l)
print('accuracy mean=',np.mean(acc_l))
print('ratio=',ratio_l)
print('ratio mean=',np.mean(ratio_l))

print('SVC rbf')          
print('accuracy=',acc_r)
print('accuracy mean=',np.mean(acc_r))
print('ratio=',ratio_r)
print('ratio mean=',np.mean(ratio_r))

import pandas as pd
from pydrive.auth import GoogleAuth
from pydrive.drive import GoogleDrive 
from google.colab import auth 
from oauth2client.client import GoogleCredentials
  
auth.authenticate_user()
gauth = GoogleAuth()
gauth.credentials = GoogleCredentials.get_application_default()
drive = GoogleDrive(gauth)

file_id = '1glsyFSfzrnkEPlvPGDjLCNwrwsOpTmhu'  #雲端硬碟檔案連結碼d/
downloaded = drive.CreateFile({'id': file_id})
downloaded.GetContentFile('behavioral.xlsx')

df_all = pd.read_excel('behavioral.xlsx')


from sklearn.utils import resample
from sklearn import svm, metrics
import numpy as np
print('behavioral.xlsx，C=10')

col_0=~df_all['REPURCHASE'].isin(['1'])
df_0=df_all[col_0] # Y=0

col_1=df_all['REPURCHASE'].isin(['1'])
df_1=df_all[col_1] # Y=1

acc_l=[]
acc_r=[]
ratio_l=[]
ratio_r=[]
for n in range(3):
    boot0 = resample(df_0, replace=True, n_samples=2*len(df_1), random_state=n)
    boot1 = resample(df_1, replace=True, n_samples=len(df_1), random_state=n)
    boot=pd.concat([boot0,boot1]) #training set
    
    boot_X=boot.drop(['REPURCHASE'], axis = 1)
    boot_Y=boot['REPURCHASE']
    
    X=df_all.drop(['REPURCHASE'], axis = 1) #所有data都測試
    Y=df_all['REPURCHASE']
    
    ker=['linear','rbf']
    for k in ker:
        svc_ker = svm.SVC(kernel=k, C=10 )
        svc_ker.fit(boot_X, boot_Y)

        test_Y_predicted = svc_ker.predict(X) ### TEST
        accuracy = metrics.accuracy_score(Y, test_Y_predicted)
        if k=='linear':acc_l.append(accuracy)
        else:acc_r.append(accuracy)
    
        num_11=0
        num_10=0
        num_01=0
        num_00=0
        for i in range(len(test_Y_predicted)):
            if test_Y_predicted[i]==1:
              if Y.iloc[i]==1:num_11+=1
              else :num_10+=1
            else:
                if Y.iloc[i]==1:num_01+=1
                else :num_00+=1
        if k=='linear':
          print('linear.random=',n)
          print('num_11,預測到y=1且真的為1 : ',num_11)
          print('真實 y=1 : ',sum(Y))
          print('num_10',num_10)
          print('num_01',num_01)
          print('num_00',num_00)
          ratio_l.append(num_11/sum(Y))
        else:
          print('rbf.random=',n)
          print('num_11,預測到y=1且真的為1 : ',num_11)
          print('真實 y=1 : ',sum(Y))
          print('num_10',num_10)
          print('num_01',num_01)
          print('num_00',num_00)
          ratio_r.append(num_11/sum(Y))

        print()

            
print('SVC linear')          
print('accuracy=',acc_l)
print('accuracy mean=',np.mean(acc_l))
print('ratio=',ratio_l)
print('ratio mean=',np.mean(ratio_l))
print()

print('SVC rbf')          
print('accuracy=',acc_r)
print('accuracy mean=',np.mean(acc_r))
print('ratio=',ratio_r)
print('ratio mean=',np.mean(ratio_r))